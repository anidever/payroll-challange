from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision = "5a3154687fc5"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "time_report",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("report_id", sa.Integer(), nullable=False),
        sa.Column("employee_id", sa.Integer(), nullable=False),
        sa.Column("date", sa.Date(), nullable=False),
        sa.Column("hours_worked", sa.Float(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_time_report_date"), "time_report", ["date"], unique=False
    )
    op.create_index(
        op.f("ix_time_report_employee_id"),
        "time_report",
        ["employee_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_time_report_report_id"),
        "time_report",
        ["report_id"],
        unique=False,
    )
    job_group = postgresql.ENUM("A", "B", name="job_group")
    job_group.create(op.get_bind())
    op.add_column(
        "time_report",
        sa.Column(
            "job_group", sa.Enum("A", "B", name="job_group"), nullable=False
        ),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_time_report_report_id"), table_name="time_report")
    op.drop_index(op.f("ix_time_report_employee_id"), table_name="time_report")
    op.drop_index(op.f("ix_time_report_date"), table_name="time_report")
    op.drop_column("time_report", "job_group")
    job_group = postgresql.ENUM("A", "B", name="job_group")
    job_group.drop(op.get_bind())
    op.drop_table("time_report")
    # ### end Alembic commands ###
